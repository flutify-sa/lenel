name: Build Windows Executable
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      
      - name: Install Git
        run: |
          choco install git -y
          # Update PATH for this session
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path", "User")
          # Verify Git is available
          git --version
        shell: powershell
      
    - name: Set up Flutter manually
  run: |
    # Clone Flutter with full history of the stable branch
    git clone https://github.com/flutter/flutter.git -b stable
    
    # Configure Git in the Flutter repo
    cd flutter
    git config --global --add safe.directory ${{ github.workspace }}\flutter
    
    # Add Flutter to PATH
    echo "${{ github.workspace }}\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    
    # Verify Flutter installation and precache Windows files
    cd ..
    .\flutter\bin\flutter doctor -v
    .\flutter\bin\flutter precache --windows
  shell: powershell
      
      - name: Install dependencies
        run: flutter pub get
        shell: powershell
      
      - name: Build Windows executable
        run: flutter build windows --release
        shell: powershell
      
      - name: Package the executable with dependencies
        run: |
          mkdir release-package
          xcopy build\windows\runner\Release\* release-package /E /H /C /I
          if (Test-Path "flutter\bin\cache\artifacts\engine\windows-x64\flutter_windows.dll") {
            echo "Copying flutter_windows.dll from windows-x64..."
            xcopy flutter\bin\cache\artifacts\engine\windows-x64\flutter_windows.dll release-package /Y
          } else {
            echo "ERROR: flutter_windows.dll not found"
            exit 1
          }
          dir release-package
        shell: powershell
      
      - name: Zip the package
        run: |
          Compress-Archive -Path release-package\* -DestinationPath windows-exe.zip
        shell: powershell
      
      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: windows-exe
          path: windows-exe.zip
